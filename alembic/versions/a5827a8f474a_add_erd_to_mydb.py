"""add ERD to mydb

Revision ID: a5827a8f474a
Revises: 57837ccd6c33
Create Date: 2025-05-20 16:12:35.856974

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5827a8f474a'
down_revision: Union[str, None] = '57837ccd6c33'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.Column('nationality', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('publishers',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('second_name', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_table('reading_relation',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('continue_page', sa.Integer(), nullable=False),
    sa.Column('favourite', sa.Boolean(), nullable=False),
    sa.Column('review', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_id', 'user_id')
    )
    op.create_index(op.f('ix_reading_relation_book_id'), 'reading_relation', ['book_id'], unique=False)
    op.create_index(op.f('ix_reading_relation_user_id'), 'reading_relation', ['user_id'], unique=False)
    op.add_column('books', sa.Column('author_name', sa.String(), nullable=False))
    op.add_column('books', sa.Column('publisher_name', sa.String(), nullable=False))
    op.add_column('books', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('books', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('books', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.alter_column('books', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.create_foreign_key(None, 'books', 'publishers', ['publisher_name'], ['name'])
    op.create_foreign_key(None, 'books', 'authors', ['author_name'], ['name'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.alter_column('books', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('books', 'deleted_at')
    op.drop_column('books', 'updated_at')
    op.drop_column('books', 'created_at')
    op.drop_column('books', 'publisher_name')
    op.drop_column('books', 'author_name')
    op.drop_index(op.f('ix_reading_relation_user_id'), table_name='reading_relation')
    op.drop_index(op.f('ix_reading_relation_book_id'), table_name='reading_relation')
    op.drop_table('reading_relation')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('publishers')
    op.drop_table('authors')
    # ### end Alembic commands ###
